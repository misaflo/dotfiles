#====================
# Completion
#====================

# Modern completion system
autoload -Uz compinit
compinit

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'


#====================
# General
#====================

# Keeps 1 000 lines of history, saved in ~/.zsh_history
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=~/.zsh_history

# Emacs editing mode
bindkey -e

# Move with ctrl + arrow
bindkey '^[[1;5C' emacs-forward-word
bindkey '^[[1;5D' emacs-backward-word

# Move with beginning-of-line and end-of-line
bindkey "\e[H" beginning-of-line
bindkey "\e[F" end-of-line

# Delete key
bindkey "\e[3~" delete-char

# No duplication in history
setopt hist_ignore_all_dups

# Shared history between sessions, ignoring duplicates
setopt histignorealldups sharehistory

# Use Ctrl-x-e to edit the current command line
autoload -U edit-command-line
zle -N edit-command-line
bindkey '^xe' edit-command-line
bindkey '^x^e' edit-command-line

# Syntax highlighting
hlzsh="$HOME/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
[[ -f "$hlzsh" ]] && source "$hlzsh"


#====================
# Exports
#====================

# coloring man pages (with less)
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

export VISUAL='nvim -R'
export EDITOR='nvim'
export PAGER='less'
export LESS='-FSRXim'

# 256 colors
export TERM='xterm-256color'


#====================
# Aliases
#====================

#----- Debian -----
if [[ -f /etc/debian_version ]]; then
  alias apt='noglob apt'
  alias upgrade="sudo apt upgrade"
  alias find-local-packages='apt list -i 2> /dev/null  | grep "local]$" | cut -d '/' -f 1'

  [[ -x "$(whence imv-wayland)" ]] && alias imv='imv-wayland'

  if [[ -x "$(whence aptlu)" ]]; then
    alias update="sudo apt update && aptlu"
  else
    alias update="sudo apt update && apt list --upgradable"
  fi
fi

#----- Arch Linux -----
if [[ -f /etc/arch-release ]]; then
  alias find-pacnew='find / -regextype posix-extended -regex ".+\.pac(new|save)" -print -o -type d -name "home" -prune 2> /dev/null'
fi

alias cp='cp -i'
alias mv='mv -i'
alias ll='ls -l'
if [[ -x "$(whence exa)" ]]; then
  alias ls='exa --group-directories-first -F'
  alias la='ls -a'
  alias lla='ll -a'
  alias lsd='ls -D'
  alias lsda='ls -Da'
  alias llt='exa -lFs new'
  alias tree='exa --tree --group-directories-first'
else
  alias ls='ls --color --group-directories-first -Fh'
  alias la='ls -A'
  alias lla='ll -A'
  # https://unix.stackexchange.com/questions/1645/is-there-any-option-with-ls-command-that-i-see-only-the-directories#answer-502028
  alias lsd='ls -d -- *(/)'
  alias lsda='ls -d -- *(D-/)'
  alias llt='ls -lrt'
  alias tree='tree -C --dirsfirst'
fi
alias grep='grep --color -I --exclude-dir=.git'
alias df='df -hT'
alias du='du -sh'
alias ip='ip -c'
alias ipaddr='ip -c -4 -br addr'
alias pingg='ping www.google.com'
alias yt-dlp-audio='yt-dlp -x --audio-quality 0'
alias yt-dlp-720p="yt-dlp -S 'res:720,fps'"
# Display the 20 biggest files
alias dub='du -sh * | sort -rh | head -n 20'
[[ -x "$(whence ncal)" ]] && alias cal='ncal -bM'
alias fd='noglob fd'
alias less='bat --style=plain'


#====================
# fuzzy finder
#====================

# Setting fd as the default source for fzf (respect .gitignore)
export FZF_DEFAULT_COMMAND='fd --type f'

function fzf_preview() {
  fzf -m --height 95% --reverse --preview '[[ $(file --mime {}) =~ binary ]] &&
    echo {} is a binary file ||
    (bat --style=numbers --color=always {} ||
    cat {}) 2> /dev/null | head -100'
}

alias -g F='$(fzf -m --height 40% --reverse)'
alias -g FP='$(fzf_preview)'


#====================
# Prompt
#====================

if [[ -x "$(whence starship)" ]]; then
  # https://github.com/starship/starship/discussions/1640
  maybe_git_fetch() {
    if ! [[ -d ".git" ]]; then
      return
    fi
    last_fetch=$(stat -c %Y .git/FETCH_HEAD)
    time_now=$(date +%s)
    timeout=60
    if [[ $((time_now - timeout)) -gt $((last_fetch)) ]]; then
      (git fetch 2> /dev/null &)
    fi
  }

  precmd() { maybe_git_fetch }

  eval "$(starship init zsh)"

else
  autoload colors; colors;
  setopt prompt_subst
  autoload -Uz vcs_info

  zstyle ':vcs_info:*' enable git
  zstyle ':vcs_info:git*' formats " on %B%F{magenta}%b"

  git_branch() {
    vcs_info
    [[ -n "$vcs_info_msg_0_" ]] && echo -n "${vcs_info_msg_0_}"
  }

  # If connected over SSH
  if [[ ! -z "$SSH_CONNECTION" ]]; then
    hostname="%B%F{#98971a}%m%b%f in "
  fi

  directory="%B%F{cyan}%3~%b%f"
  symbol=" %B%F{green}‚ùØ%b%f"

  PROMPT='$hostname$directory$(git_branch)$symbol '
fi


[[ -f ~/.zsh_aliases ]]   && source ~/.zsh_aliases
[[ -f ~/.zsh_functions ]] && source ~/.zsh_functions
